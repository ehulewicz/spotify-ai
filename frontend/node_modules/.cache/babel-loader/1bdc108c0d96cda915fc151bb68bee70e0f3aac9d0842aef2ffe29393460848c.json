{"ast":null,"code":"var _jsxFileName = \"/home/eahtr/projects/spotify-ai/frontend/src/Chatbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './CSS/Chatbox.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbox = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const textareaRef = useRef(null);\n  const [test, rawSetTest] = useState('');\n  const setTest = text => {\n    rawSetTest(prevTest => prevTest + '\\n' + text);\n  };\n  useEffect(() => {\n    if (textareaRef.current) {\n      textareaRef.current.style.height = 'auto';\n      textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\n    }\n  }, [input]);\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n  const handleKeyDown = e => {\n    if (e.shiftKey && e.key === 'Enter') {\n      e.preventDefault();\n      setInput(prevInput => prevInput + '\\n');\n    } else if (e.key === 'Enter') {\n      rawSetTest('testing handleSend');\n      e.preventDefault();\n      handleSend();\n    }\n  };\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: 'user',\n      text: input\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setInput('');\n    try {\n      const response = await fetch('http://localhost:5001/chat/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setTest('Message received successfully');\n        const gptMessage = {\n          sender: 'gpt',\n          text: data.response\n        };\n        setMessages(prevMessages => [...prevMessages, gptMessage]);\n      } else {\n        setTest('Error: ' + data.error);\n      }\n    } catch (error) {\n      setTest('Error: ' + error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbox\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: message.sender === 'user' ? 'user-message' : 'gpt-message',\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: textareaRef,\n        type: \"text\",\n        value: input,\n        onChange: handleInputChange,\n        onKeyDown: handleKeyDown,\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"development\",\n      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: test\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbox, \"129aRfFyt5STLGLsadD/rq3fGDE=\");\n_c = Chatbox;\nexport default Chatbox;\nvar _c;\n$RefreshReg$(_c, \"Chatbox\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Chatbox","_s","input","setInput","messages","setMessages","textareaRef","test","rawSetTest","setTest","text","prevTest","current","style","height","scrollHeight","handleInputChange","e","target","value","handleKeyDown","shiftKey","key","preventDefault","prevInput","handleSend","trim","userMessage","sender","prevMessages","response","fetch","method","headers","body","JSON","stringify","message","data","json","ok","gptMessage","error","className","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","onChange","onKeyDown","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/eahtr/projects/spotify-ai/frontend/src/Chatbox.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\nimport './CSS/Chatbox.css';\n\nconst Chatbox = () => {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const textareaRef = useRef(null);\n\n  const [test, rawSetTest] = useState('');\n  const setTest = (text) => {\n    rawSetTest((prevTest) => prevTest + '\\n' + text);\n  }\n\n  useEffect(() => {\n    if (textareaRef.current) {\n      textareaRef.current.style.height = 'auto';\n      textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\n    }\n  }, [input]);\n\n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n  }\n\n  const handleKeyDown = (e) => {\n    if (e.shiftKey && e.key === 'Enter') {\n      e.preventDefault();\n      setInput((prevInput) => prevInput + '\\n');\n    } else if (e.key === 'Enter') {\n      rawSetTest('testing handleSend');\n      e.preventDefault();\n      handleSend();\n    }\n  }\n\n  const handleSend = async () => {\n    if (!input.trim()) return;\n  \n    const userMessage = { sender: 'user', text: input };\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\n    setInput('');\n  \n    try {\n      const response = await fetch('http://localhost:5001/chat/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ message: input }),\n      });\n  \n      const data = await response.json();\n  \n      if (response.ok) {\n        setTest('Message received successfully')\n        const gptMessage = { sender: 'gpt', text: data.response };\n        setMessages((prevMessages) => [...prevMessages, gptMessage]);\n      } else {\n        setTest('Error: ' + data.error);\n      }\n    } catch (error) {\n      setTest('Error: ' + error);\n    }\n  };\n\n  return (\n    <div className=\"chatbox\">\n      <div className=\"messages\">\n        {messages.map((message, index) => (\n          <div key={index} className={message.sender === 'user' ? 'user-message' : 'gpt-message'}>\n            <pre>{message.text}</pre>\n          </div>\n        ))}\n      </div>  \n      <div className=\"input-container\">\n        <textarea\n          ref={textareaRef}\n          type=\"text\"\n          value={input}\n          onChange={handleInputChange}\n          onKeyDown={handleKeyDown}\n          placeholder=\"Type your message...\"\n        />\n        <button onClick={handleSend}>Send</button>\n      </div>\n      <div className=\"development\">\n        <pre>{test}</pre>\n      </div>\n    </div>\n  );\n}\n\nexport default Chatbox;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}